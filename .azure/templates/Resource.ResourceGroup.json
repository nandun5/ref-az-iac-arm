{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "Portfolio": {
            "type": "string"
        },
        "FundingProject": {
            "type": "string"
        },
        "ApplicationName": {
            "type": "string",
            "maxLength": 16
        },
        "Environment": {
            "type": "string",
            "allowedValues": [
                "D",
                "Q",
                "U",
                "P",
                "DS",
                "QS",
                "US",
                "S"
            ]
        },
        "RgLocation": {
            "type": "string"
        },
        "ApplicationServicePrincipalObjectId": {
            "type": "string"
        },
        "ServiceFabricServicePrincipalObjectId": {
            "type": "string"
        },
        "AzureDevOpsServicePrincipalObjectId": {
            "type": "string"
        },
        "AspSku": {
            "type": "string"
        },
        "AspSkuCode": {
            "type": "string"
        },
        "AspWorkerSize": {
            "type": "string"
        },
        "AspWorkerSizeId": {
            "type": "string"
        },
        "AspNumberOfWorkers": {
            "type": "string"
        },
        "CosmosOrderContainerTtlInSeconds": {
            "type": "int"
        },
        "WorkspaceResourceGroup": {
        "type": "string"
        },
        "WorkspaceName": {
        "type": "string"
        }
    },
    "variables": {
        "EnvObj": {
            "D": "Dev",
            "Q": "QA",
            "U": "UAT",
            "P": "Prod",
            "S": "PCI",
            "DS": "DPci",
            "QS": "QPci",
            "US": "UPci"
        },
        "EnvTag": "[variables('EnvObj')[parameters('Environment')]]",
        "RegionObj": {
            "eastus": "East",
            "eastus2": "East2",
            "centralus": "Central"
        },
        "RegionTag": "[variables('RegionObj')[toLower(parameters('RgLocation'))]]",
        "ResourceTags": {
            "Portfolio": "[parameters('Portfolio')]",
            "Application": "[parameters('ApplicationName')]",
            "Concept": "nandun",
            "FundingProject": "[parameters('FundingProject')]",
            "Environment": "[toupper(variables('EnvTag'))]",
            "LineOfBusiness": "IT"
        },
        "TenantId": "[subscription().tenantId]",
        "RgName": "[concat(variables('EnvTag'), '-', parameters('ApplicationName'), '-', variables('RegionTag'), '-RG')]",
        "KvName": "[concat(variables('EnvTag'), '-', parameters('ApplicationName'), '-', variables('RegionTag'), '-KV')]",
        "SaFnDataName": "[tolower(concat(parameters('Environment'), parameters('ApplicationName'), 'fndata01' ))]",
        "SaAppDataName": "[tolower(concat(parameters('Environment'), parameters('ApplicationName'), 'adata01' ))]",
        "AiName": "[tolower(concat(parameters('Environment'), parameters('ApplicationName'), 'appinsights01' ))]",
        "AspName": "[concat(variables('EnvTag'), '-', parameters('ApplicationName'), '-', variables('RegionTag'), '-ASP')]",
        "AegName": "[concat(variables('EnvTag'), '-', parameters('ApplicationName'), '-', variables('RegionTag'), '-AEG')]",
        "CosmosName": "[tolower(concat(parameters('Environment'), parameters('ApplicationName'), 'cosmos01' ))]"
    },
    "functions": [
        {
            "namespace": "udf",
            "members": {
                "getResourceId": {
                    "parameters": [
                        {
                            "name": "resourceGroup",
                            "type": "string"
                        },
                        {
                            "name": "resourceType",
                            "type": "string"
                        },
                        {
                            "name": "resourceName",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('resourceGroup'),'/providers/', parameters('resourceType'),'/', parameters('resourceName'))]"
                    }
                },
                "getWorkspaceResourceId": {
                    "parameters": [
                        {
                            "name": "resourceGroup",
                            "type": "string"
                        },
                        {
                            "name": "resourceType",
                            "type": "string"
                        },
                        {
                            "name": "workspaceName",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('resourceGroup'),'/providers/', parameters('resourceType'),'/workspaces/', parameters('workspaceName'))]"
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2021-04-01",
            "location": "[parameters('RgLocation')]",
            "name": "[variables('RgName')]",
            "properties": {},
            "tags": "[variables('ResourceTags')]"
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "eventResourcesDeployment",
            "resourceGroup": "[variables('RgName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/resourceGroups', variables('RgName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults",
                            "apiVersion": "2019-09-01",
                            "name": "[variables('KvName')]",
                            "location": "[parameters('RgLocation')]",
                            "tags": "[variables('ResourceTags')]",
                            "properties": {
                                "sku": {
                                    "family": "A",
                                    "name": "Standard"
                                },
                                "tenantId": "[variables('TenantId')]",
                                "accessPolicies": [
                                    {
                                        "tenantId": "[variables('TenantId')]",
                                        "objectId": "[parameters('ApplicationServicePrincipalObjectId')]",
                                        "permissions": {
                                            "keys": [
                                                "Get",
                                                "List",
                                                "Decrypt",
                                                "Encrypt"
                                            ],
                                            "secrets": [
                                                "Get",
                                                "List"
                                            ],
                                            "certificates": [
                                                "Get",
                                                "List"
                                            ]
                                        }
                                    },
                                    {
                                        "tenantId": "[variables('TenantId')]",
                                        "objectId": "[parameters('ServiceFabricServicePrincipalObjectId')]",
                                        "permissions": {
                                            "keys": [
                                                "Get",
                                                "List",
                                                "Decrypt",
                                                "Encrypt"
                                            ],
                                            "secrets": [
                                                "Get",
                                                "List"
                                            ],
                                            "certificates": [
                                                "Get",
                                                "List"
                                            ]
                                        }
                                    },
                                    {
                                        "tenantId": "[variables('TenantId')]",
                                        "objectId": "[parameters('AzureDevOpsServicePrincipalObjectId')]",
                                        "permissions": {
                                            "keys": [
                                                "Get",
                                                "List",
                                                "Update",
                                                "Create",
                                                "Delete"
                                            ],
                                            "secrets": [
                                                "Get",
                                                "List",
                                                "Set",
                                                "Delete"
                                            ],
                                            "certificates": [
                                                "Get",
                                                "List",
                                                "Update",
                                                "Create"
                                            ]
                                        }
                                    }
                                ],
                                "enabledForDeployment": false,
                                "enabledForDiskEncryption": false,
                                "enabledForTemplateDeployment": false
                            }
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2021-04-01",
                            "name": "[variables('SaFnDataName')]",
                            "location": "[parameters('RgLocation')]",
                            "kind": "StorageV2",
                            "tags": "[variables('ResourceTags')]",
                            "sku": {
                                "name": "Standard_RAGRS"
                            },
                            "properties": {
                                "supportsHttpsTrafficOnly": true
                            }
                        },
                        {
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2021-04-01",
                            "name": "[variables('SaAppDataName')]",
                            "location": "[parameters('RgLocation')]",
                            "kind": "StorageV2",
                            "tags": "[variables('ResourceTags')]",
                            "sku": {
                                "name": "Standard_RAGRS"
                            },
                            "properties": {
                                "supportsHttpsTrafficOnly": true
                            }
                        },
                        {
                            "type": "microsoft.insights/components",
                            "kind": "web",
                            "name": "[variables('AiName')]",
                            "apiVersion": "2020-02-02",
                            "location": "[parameters('RgLocation')]",
                            "tags": "[variables('ResourceTags')]",
                            "properties": {
                                "Application_Type": "other",
                                "WorkspaceResourceId": "[udf.getWorkspaceResourceId(parameters('WorkspaceResourceGroup'), 'microsoft.operationalinsights', parameters('WorkspaceName'))]"
                            }
                        },
                        {
                            "apiVersion": "2020-12-01",
                            "name": "[variables('AspName')]",
                            "type": "Microsoft.Web/serverfarms",
                            "location": "[parameters('RgLocation')]",
                            "tags": "[variables('ResourceTags')]",
                            "dependsOn": [],
                            "properties": {
                                "name": "[variables('AspName')]",
                                "workerSize": "[parameters('AspWorkerSize')]",
                                "workerSizeId": "[parameters('AspWorkerSizeId')]",
                                "numberOfWorkers": "[parameters('AspNumberOfWorkers')]"
                            },
                            "sku": {
                                "Tier": "[parameters('AspSku')]",
                                "Name": "[parameters('AspSkuCode')]"
                            }
                        },
                        {
                            "type": "Microsoft.EventGrid/domains",
                            "apiVersion": "2021-06-01-preview",
                            "name": "[variables('AegName')]",
                            "location": "[parameters('RgLocation')]",
                            "sku": {
                                "name": "Basic"
                            },
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "properties": {
                                "inputSchema": "EventGridSchema",
                                "publicNetworkAccess": "Enabled",
                                "disableLocalAuth": false
                            }
                        },
                        {
                            "type": "Microsoft.EventGrid/domains/topics",
                            "apiVersion": "2020-06-01",
                            "name": "[concat(variables('AegName'), '/ref-ingest-topic')]",
                            "dependsOn": [
                                "[udf.getResourceId(variables('RgName'), 'Microsoft.EventGrid/domains', variables('AegName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts",
                            "apiVersion": "2021-06-15",
                            "name": "[variables('CosmosName')]",
                            "location": "[parameters('RgLocation')]",
                            "tags": {
                                "defaultExperience": "Core (SQL)",
                                "hidden-cosmos-mmspecial": ""
                            },
                            "kind": "GlobalDocumentDB",
                            "identity": {
                                "type": "None"
                            },
                            "properties": {
                                "publicNetworkAccess": "Enabled",
                                "enableAutomaticFailover": true,
                                "enableMultipleWriteLocations": false,
                                "isVirtualNetworkFilterEnabled": false,
                                "virtualNetworkRules": [],
                                "disableKeyBasedMetadataWriteAccess": false,
                                "enableFreeTier": false,
                                "enableAnalyticalStorage": false,
                                "analyticalStorageConfiguration": {
                                    "schemaType": "WellDefined"
                                },
                                "databaseAccountOfferType": "Standard",
                                "defaultIdentity": "FirstPartyIdentity",
                                "networkAclBypass": "None",
                                "disableLocalAuth": false,
                                "consistencyPolicy": {
                                    "defaultConsistencyLevel": "Session",
                                    "maxIntervalInSeconds": 5,
                                    "maxStalenessPrefix": 100
                                },
                                "locations": [
                                    {
                                        "locationName": "[parameters('RgLocation')]",
                                        "provisioningState": "Succeeded",
                                        "failoverPriority": 0,
                                        "isZoneRedundant": false
                                    }
                                ],
                                "cors": [],
                                "capabilities": [],
                                "ipRules": [],
                                "backupPolicy": {
                                    "type": "Periodic",
                                    "periodicModeProperties": {
                                        "backupIntervalInMinutes": 240,
                                        "backupRetentionIntervalInHours": 8,
                                        "backupStorageRedundancy": "Geo"
                                    }
                                },
                                "networkAclBypassResourceIds": [],
                                "createMode": "Default"
                            }
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
                            "apiVersion": "2021-06-15",
                            "name": "[concat(variables('CosmosName'), '/Event')]",
                            "dependsOn": [
                                "[udf.getResourceId(variables('RgName'), 'Microsoft.DocumentDB/databaseAccounts',  variables('CosmosName'))]"
                            ],
                            "properties": {
                                "resource": {
                                    "id": "Event"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
                            "apiVersion": "2021-06-15",
                            "name": "[concat(variables('CosmosName'), '/00000000-0000-0000-0000-000000000001')]",
                            "dependsOn": [
                                "[udf.getResourceId(variables('RgName'), 'Microsoft.DocumentDB/databaseAccounts',  variables('CosmosName'))]"
                            ],
                            "properties": {
                                "roleName": "Cosmos DB Built-in Data Reader",
                                "type": "BuiltInRole",
                                "assignableScopes": [
                                    "[udf.getResourceId(variables('RgName'), 'Microsoft.DocumentDB/databaseAccounts',  variables('CosmosName'))]"
                                ],
                                "permissions": [
                                    {
                                        "dataActions": [
                                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/executeQuery",
                                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/readChangeFeed",
                                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/read"
                                        ],
                                        "notDataActions": []
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions",
                            "apiVersion": "2021-06-15",
                            "name": "[concat(variables('CosmosName'), '/00000000-0000-0000-0000-000000000002')]",
                            "dependsOn": [
                                "[udf.getResourceId(variables('RgName'), 'Microsoft.DocumentDB/databaseAccounts',  variables('CosmosName'))]"
                            ],
                            "properties": {
                                "roleName": "Cosmos DB Built-in Data Contributor",
                                "type": "BuiltInRole",
                                "assignableScopes": [
                                    "[udf.getResourceId(variables('RgName'), 'Microsoft.DocumentDB/databaseAccounts',  variables('CosmosName'))]"
                                ],
                                "permissions": [
                                    {
                                        "dataActions": [
                                            "Microsoft.DocumentDB/databaseAccounts/readMetadata",
                                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/*",
                                            "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/items/*"
                                        ],
                                        "notDataActions": []
                                    }
                                ]
                            }
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
                            "apiVersion": "2021-06-15",
                            "name": "[concat(variables('CosmosName'), '/Event/SampleDomain')]",
                            "dependsOn": [
                                "[udf.getResourceId(variables('RgName'), 'Microsoft.DocumentDB/databaseAccounts', concat(variables('CosmosName'), '/sqlDatabases/Event'))]",
                                "[udf.getResourceId(variables('RgName'), 'Microsoft.DocumentDB/databaseAccounts',  variables('CosmosName'))]"
                            ],
                            "properties": {
                                "resource": {
                                    "id": "Order",
                                    "indexingPolicy": {
                                        "indexingMode": "consistent",
                                        "automatic": true,
                                        "includedPaths": [
                                            {
                                                "path": "/*"
                                            }
                                        ],
                                        "excludedPaths": [
                                            {
                                                "path": "/\"_etag\"/?"
                                            }
                                        ]
                                    },
                                    "partitionKey": {
                                        "paths": [
                                            "/Id"
                                        ],
                                        "kind": "Hash"
                                    },
                                    "uniqueKeyPolicy": {
                                        "uniqueKeys": []
                                    },
                                    "defaultTtl": "[parameters('CosmosOrderContainerTtlInSeconds')]",
                                    "conflictResolutionPolicy": {
                                        "mode": "LastWriterWins",
                                        "conflictResolutionPath": "/_ts"
                                    }
                                }
                            }
                        },
                        {
                            "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers/throughputSettings",
                            "apiVersion": "2021-06-15",
                            "name": "[concat(variables('CosmosName'), '/Event/SampleDomain/default')]",
                            "dependsOn": [
                                "[udf.getResourceId(variables('RgName'), 'Microsoft.DocumentDB/databaseAccounts', concat(variables('CosmosName'), '/sqlDatabases/Event/containers/Order'))]",
                                "[udf.getResourceId(variables('RgName'), 'Microsoft.DocumentDB/databaseAccounts', concat(variables('CosmosName'), '/sqlDatabases/Event'))]",
                                "[udf.getResourceId(variables('RgName'), 'Microsoft.DocumentDB/databaseAccounts',  variables('CosmosName'))]"
                            ],
                            "properties": {
                                "resource": {
                                    "throughput": 400,
                                    "autoscaleSettings": {
                                        "maxThroughput": 4000
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "RgName": {
            "type": "string",
            "value": "[variables('RgName')]"
        },
        "KvName": {
            "type": "string",
            "value": "[variables('KvName')]"
        },
        "SaFnDataName": {
            "type": "string",
            "value": "[variables('SaFnDataName')]"
        },
        "SaAppDataName": {
            "type": "string",
            "value": "[variables('SaAppDataName')]"
        },
        "AiName": {
            "type": "string",
            "value": "[variables('AiName')]"
        },
        "AspName": {
            "type": "string",
            "value": "[variables('AspName')]"
        },
        "AegName": {
            "type": "string",
            "value": "[variables('AegName')]"
        },
        "CosmosName": {
            "type": "string",
            "value": "[variables('CosmosName')]"
        }
    }
}