{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ApplicationName": {
            "type": "string"
        },
        "Environment": {
            "type": "string"
        },
        "RgLocation": {
            "type": "string"
        },
        "ApimRgName": {
            "type": "string"
        },
        "ApimRgLocation": {
            "type": "string"
        },
        "ApimName": {
            "type": "string"
        }
    },
    "variables": {
        "EnvObj": {
            "D": "Dev",
            "Q": "QA",
            "U": "UAT",
            "P": "Prod",
            "S": "PCI",
            "DS": "DPci",
            "QS": "QPci",
            "US": "UPci"
        },
        "EnvTag": "[variables('EnvObj')[parameters('Environment')]]",
        "RegionObj": {
            "eastus": "East",
            "eastus2": "East2",
            "centralus": "Central"
        },

        "RegionTag": "[variables('RegionObj')[toLower(parameters('RgLocation'))]]",
        "RgName": "[concat(variables('EnvTag'), '-', parameters('ApplicationName'), '-', variables('RegionTag'), '-RG')]",
        "AegName": "[concat(variables('EnvTag'), '-', parameters('ApplicationName'), '-', variables('RegionTag'), '-AEG')]",
        "ApiDisclaimer": "This API Resource is maintained via CI/CD pipelines. ANY MODIFICATIONS VIA PORTAL WILL BE OVERRIDDEN BY THE PIPELINE (https://dev.azure.com/nandun-Corp/reference/_build).",
        "AegKeyApimPolicy": [
            "<set-header name=\"aeg-sas-key\" exists-action=\"override\">",
            "    <value>{{", "[variables('AegName')]", "-key}}</value>",
            "</set-header>"
        ],
        "EventGridInboundApimPolicy": [
            "[udf.joinStrings(variables('AegKeyApimPolicy'))]"
        ]
    },
    "functions": [
        {
            "namespace": "udf",
            "members": {
                "getResourceId": {
                    "parameters": [
                        {
                            "name": "resourceGroup",
                            "type": "string"
                        },
                        {
                            "name": "resourceType",
                            "type": "string"
                        },
                        {
                            "name": "resourceName",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('resourceGroup'),'/providers/', parameters('resourceType'),'/', parameters('resourceName'))]"
                    }
                },
                "getApimPolicyString": {
                    "parameters": [
                        {
                            "name": "inboundPolicies",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "string",
                        "value": "[concat('<policies><inbound><base />',parameters('inboundPolicies'),'</inbound><backend><base /></backend><outbound><base /></outbound><on-error><base /></on-error></policies>')]"
                    }
                },
                "joinStrings": {
                    "parameters": [
                        {
                            "name": "arg",
                            "type": "array"
                        }
                    ],
                    "output": {
                        "type": "string",
                        // This kludgy line is to do a simple string.Join(array). the concat or string functions in ARM templates don't work as expected. be cautious if reused.
                        "value": "[replace(replace(replace(replace(replace(string(parameters('arg')), ',\",\"', ','), '\",\"', ''), '[\"', ''), '\"]', ''), '\\\"', '\"')]"
                    }
                }
            }
        }
    ],
    "resources": [
        {
            "type": "Microsoft.Resources/resourceGroups",
            "apiVersion": "2018-05-01",
            "location": "[parameters('ApimRgLocation')]",
            "name": "[parameters('ApimRgName')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2018-05-01",
            "name": "eventApimDeployment",
            "resourceGroup": "[parameters('ApimRgName')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.ApiManagement/service/products",
                            "apiVersion": "2019-01-01",
                            "name": "[concat(parameters('ApimName'), '/reference')]",
                            "properties": {
                                "approvalRequired": false,
                                "description": "[concat('nandun reference. ', variables('ApiDisclaimer'))]",
                                "displayName": "reference",
                                "state": "published",
                                "subscriptionRequired": true,
                                "terms": "nandun Internal use ONLY."
                            }
                        },
                        {
                            "type": "Microsoft.ApiManagement/service/subscriptions",
                            "apiVersion": "2019-01-01",
                            "name": "[concat(parameters('ApimName'), '/reference-subscription')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ApiManagement/service/products', parameters('ApimName'), 'reference')]"
                            ],
                            "properties": {
                                "scope": "[resourceId('Microsoft.ApiManagement/service/products', parameters('ApimName'), 'reference')]",
                                "displayName": "reference Subscription",
                                "state": "active",
                                "allowTracing": true
                            }
                        },
                        {
                            "type": "Microsoft.ApiManagement/service/subscriptions",
                            "apiVersion": "2019-01-01",
                            "name": "[concat(parameters('ApimName'), '/sample-subscription')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ApiManagement/service/products', parameters('ApimName'), 'reference')]"
                            ],
                            "properties": {
                                "scope": "[resourceId('Microsoft.ApiManagement/service/products', parameters('ApimName'), 'reference')]",
                                "displayName": "Sample Subscription",
                                "state": "active",
                                "allowTracing": true
                            }
                        },
                        {
                            "type": "Microsoft.ApiManagement/service/namedValues",
                            "apiVersion": "2021-01-01-preview",
                            "name": "[concat(parameters('ApimName'), '/',variables('AegName'),'-key')]",
                            "properties": {
                                "displayName": "[concat(variables('AegName'),'-key')]",
                                "value": "[listkeys(udf.getResourceId(variables('RgName'), 'Microsoft.EventGrid/domains', variables('AegName')),'2020-06-01').key1]",
                                "tags": [
                                    "key",
                                    "event-grid"
                                ],
                                "secret": true
                            }
                        },
                        {
                            "type": "Microsoft.ApiManagement/service/apis",
                            "apiVersion": "2019-01-01",
                            "name": "[concat(parameters('ApimName'), '/reference-ingest')]",
                            "properties": {
                                "displayName": "reference Ingest",
                                "apiRevision": "1",
                                "description": "[concat('This API is for ', variables('AegName'),' Event Grid. ', variables('ApiDisclaimer'))]",
                                "subscriptionRequired": true,
                                "path": "reference/ingest/events",
                                "serviceUrl": "[reference(udf.getResourceId(variables('RgName'), 'Microsoft.EventGrid/domains', variables('AegName')),'2020-06-01').endpoint]",
                                "protocols": [
                                    "https"
                                ],
                                "isCurrent": true
                            }
                        },
                        {
                            "name": "[concat(parameters('ApimName'), '/reference/reference-ingest')]",
                            "type": "Microsoft.ApiManagement/service/products/apis",
                            "apiVersion": "2019-01-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimName'), 'reference-ingest')]"
                            ]
                        },
                        {
                            "type": "Microsoft.ApiManagement/service/apis/operations",
                            "apiVersion": "2019-01-01",
                            "name": "[concat(parameters('ApimName'), '/reference-ingest/post-default')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimName'), 'reference-ingest')]"
                            ],
                            "properties": {
                                "displayName": "default",
                                "method": "POST",
                                "urlTemplate": "/",
                                "templateParameters": [],
                                "responses": []
                            }
                        },
                        {
                            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
                            "apiVersion": "2019-01-01",
                            "name": "[concat(parameters('ApimName'), '/reference-ingest/post-default/policy')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimName'), 'reference-ingest', 'post-default')]",
                                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimName'), 'reference-ingest')]"
                            ],
                            "properties": {
                                "value": "[udf.getApimPolicyString(udf.joinStrings(variables('EventGridInboundApimPolicy')))]",
                                "format": "xml"
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
    }
}